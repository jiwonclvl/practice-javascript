/**
 * 연산자 우선 순위
 *
 * 그룹화: ()를 사용하면 가장 먼저 연산을 수행한다.
 */

/**
 * 3 ** 2 + 1을 27로 만들기
 */
{
    const answer = 3 ** (2 + 1) //결과: 27
}

/**
 * 컴퓨터의 경우 이진법으로 계산을 하기 떄문에 소수점 계산을 잘하지 못하는 경우가 많다.
 * -> 부동 소수점 원인
 *
 * 따라서, 이를 해결하기 위해서는 값을 정수로 만든 후 계산하고 마지막에 /10을 해주면 된다.
 */

const wrongResult = 0.1 + 0.2 //예상 값: 0.3 실제 값: 0.3000000...4
const result = (0.1 * 10 + 0.2 * 10) / 10 //출력 값: 0.3

/**
 * 💡==과 ===의 차이점
 *
 * ==의 경우 형변환으로 인해 보이는 형태가 다름에도 불구하고 '같다'라는 값을 응답한다.
 *
 * ===의 경우 비교시 자료형까지 비교하기 때문에  되도록이면 ===을 사용하는 것이 좋다.
 */

'1' == 1 //true
1 == true //true

'1' === 1 //false
1 === true //false
